#region Prolog
#***********************************************************************************************
# CREATEUR : YMD
# DATE DE CREATION : 02/11/2023
# DERNIERE MODIFICATION EFFECTUEE PAR : VRT
# DATE DE DERNIERE MODIFICATION : 14/11/2023
# DESCRIPTION DU PROCESSUS : MAJ des données du cube Compte Exploitation Saisie
# DESCRIPTION MODIFICATION : Correction vue cible pour Poste_Budgetaire
#************************************************************************************************

###############################   MONITORING   #################################

### 0.Définition des variables du monitoring
Z_DEBUT_EXE =  StringToNumber(TimSt (Now, '\h'))*3600 +StringToNumber(TimSt (Now, '\i'))*60+StringToNumber(TimSt (Now, '\s'));
sCubeParamS	             = 'ParametresSources' ;
sCubeParamT	             = 'ParametrageT' ;
cMainProcName       = GetProcessName();
cRepertoireRacine   = GetProcessErrorFileDirectory;
cTimeStamp          = TimSt( Now, '\Y\m\d\h\i\s' );
cRandomInt          = NumberToString( INT( RAND( ) * 1000 ));
cTimeProcess        = cTimeStamp | '_' | cRandomInt;
sSource = '' ;
sNomFichier =  '' ;
nErrors = 0 ;
nErrorsSource = 0 ; 
zLogNumero         = 1 ;
nErrors          = 0;
vMessage              = '';

IF ( SUBST ( TM1User() , 1 , 2 ) @= 'R*' ) ;
	cUtilisateur = 'Admin' ;
ELSE ;
	cUtilisateur        = TM1User();
ENDIF ;

sDate = TimSt( Now, '\Y\m\d' );

sUser = ATTRS( '}Clients' , cUtilisateur , '}TM1_DefaultDisplayValue' );
nLong = LONG ( sUser ) ;
sUser = SUBST ( sUser , 20 , nLong - 19 ) ;

### 1. Déclaration des variables

# Pour suppression des vues et ss ensemble temporaire
nDebug = 1 ;

# Pour entête dans le fichier de rejet
nEnteteMag = 0 ;
nEnteteRPB = 0 ;
nEntete615610=0;
nEntete615611=0;
nEntete615612=0;
nEntete615613=0;
nEntete615614=0;
nEntete615615=0;
nEntete615618=0;
nEntete615620=0;
nEntete615622=0;
nEntete615623=0;
nEntete615625=0;
nEntete615626=0;
nEntete615627=0;
nEntete615630=0;
nEntete615631=0;
nEntete615632=0;
nEntete615633=0;
nEntete615634=0;
nEntete615636=0;
nEntete615640=0;
nEntete615645=0;
nEntete615648=0;

# Compteur d'erreur
nError = 0 ; 

#**Fichier Debug
sFichierRepDebug = CellGetS ( sCubeParamT , 'Txt_RepertoireDebug' , 'ValeurS' );
sDebug = sFichierRepDebug | 'test'|cMainProcName|'.csv' ;

#**Fichier Rejet
sFichierRepRejet = CellGetS ( sCubeParamT , 'Txt_RepertoireRejet' , 'ValeurS' );
sRejet = sFichierRepRejet | 'Rejet_'| '_' | sUser | '_' | sDate | '_' | cMainProcName|'.csv' ;

# Suppression du fichier de rejet si Existant
IF ( FileExists( sRejet ) = 1 ) ;
  ASCIIDelete( sRejet );
ENDIF ;

###############################   FIN MONITORING   #################################

# Déclaration des variables 

# Définition du périmètre
# que du Reel
sExercice = DimensionElementPrincipalName ( 'Exercice' , CellGetS( 'ParametresFonctionnels', 'ExerciceEnCours' , 'ValeurS' ) ) ;
sScenario = 'Budget' ;
sVersion = DimensionElementPrincipalName ( 'Version' , CellGetS( 'ParametresFonctionnels', 'VersionEnCours' , 'ValeurS' ) ) ;


###########################################
## Définition du fichier source
###########################################

# Répertoire fichier source
sRepertoire = CellGetS ( sCubeParamS , cMainProcName , 'Txt_RepertoireSource' ) ;
sNomFichier = CellGetS ( sCubeParamS , cMainProcName , 'txt_NomFichier' ) ;

# Contrôle du répertoire

IF ( sRepertoire @= '' % sNomFichier @= '' ) ;
  ItemReject( 'Le répertoire ou le nom du fichier n'| CHAR(39)|'est pas renseigné dans le cube ParamètreSources' );
  ProcessBreak;
ENDIF ;

# Renommage du fichier source selon les paramètres utilisateur
sNomFichier = sNomFichier | '_' | sExercice | '_' | sScenario | '.csv'  ;
sNomComplet = sRepertoire | sNomFichier ;

# Controle de la présence du fichier source dans le répertoire
IF ( FileExists( sNomComplet ) = 0 ) ;
  ItemReject( 'Le fichier source ' | sNomFichier | ' n' | CHAR ( 39) | 'est pas présent dans le répertoire ' | sRepertoire );
  ProcessBreak;
ENDIF ;

# Définition du fichier comme source
DatasourceNameForServer = sNomComplet ;
DataSourceASCIIDelimiter = ';' ;


###########################################
## Creation vue CIBLE sur Cout_Elec
###########################################

### Déclaration des variables
sCubeCible = 'Compte_Exploitation_Saisie';
sDimCible1 = 'Exercice';
sDimCible2 = 'Version' ; 
sDimCible3 = 'Scenario' ; 
sDimCible4 = 'Mois' ; 
sDimCible5 = 'Magasin' ; 
sDimCible6 = 'Poste_Budgetaire' ;
sDimCible = 'm_Compte_Exploitation';


# Le nom de la vue du cube :
sVueZero = 'RAZ_vue_' | cMainProcName ; 

# Le nom des sous-ensembles
sSubsetZero = 'RAZ_Subset_' | cMainProcName ; 

# Création de la vue cible
IF( ViewExists( sCubeCible, sVueZero ) = 1 );
  ViewDestroy( sCubeCible, sVueZero );
ENDIF;
ViewCreate( sCubeCible, sVueZero , nDebug );

# Exercice
IF ( SubsetExists( sDimCible1, sSubsetZero ) = 1);
  SubsetDestroy ( sDimCible1, sSubsetZero ) ;
ENDIF; 
SubsetCreate ( sDimCible1 , sSubsetZero , nDebug ) ; 
SubsetElementInsert ( sDimCible1 , sSubsetZero , sExercice , nDebug ) ;

# Version
IF ( SubsetExists( sDimCible2, sSubsetZero ) = 1);
  SubsetDestroy ( sDimCible2, sSubsetZero ) ;
ENDIF; 
SubsetCreate ( sDimCible2 , sSubsetZero , nDebug ) ; 
SubsetElementInsert ( sDimCible2 , sSubsetZero , sVersion , nDebug ) ;

# Scenario
IF ( SubsetExists( sDimCible3, sSubsetZero ) = 1);
  SubsetDestroy ( sDimCible3, sSubsetZero ) ;
ENDIF; 
SubsetCreate ( sDimCible3 , sSubsetZero , nDebug ) ; 
SubsetElementInsert ( sDimCible3 , sSubsetZero , sScenario , nDebug ) ;

# Mois
IF ( SubsetExists( sDimCible4, sSubsetZero ) = 1);
  SubsetDestroy ( sDimCible4, sSubsetZero ) ;
ENDIF;
StringMDX = '{TM1FILTERBYLEVEL ( { TM1SUBSETALL ( [ '| sDimCible4 | ' ] ) } , 0 ) }' ;
SubsetCreateByMDX ( sSubsetZero , StringMDX , nDebug  ) ;


# Magasin
IF ( SubsetExists( sDimCible5, sSubsetZero ) = 1);
  SubsetDestroy ( sDimCible5, sSubsetZero ) ;
ENDIF;
StringMDX = '{TM1FILTERBYLEVEL ( { TM1SUBSETALL ( [ '| sDimCible5 | ' ] ) } , 0 ) }' ;
SubsetCreateByMDX ( sSubsetZero , StringMDX , nDebug  ) ;
 

# Poste_Budgetaire
IF ( SubsetExists( sDimCible6, sSubsetZero ) = 1);
  SubsetDestroy ( sDimCible6, sSubsetZero ) ;
ENDIF; 
SubsetCreate ( sDimCible6 , sSubsetZero , nDebug ) ; 
SubsetElementInsert ( sDimCible6 , sSubsetZero , '615610' , nDebug ) ;
SubsetElementInsert ( sDimCible6 , sSubsetZero , '615611' , nDebug ) ;
SubsetElementInsert ( sDimCible6 , sSubsetZero , '615612' , nDebug ) ;
SubsetElementInsert ( sDimCible6 , sSubsetZero , '615613' , nDebug ) ;
SubsetElementInsert ( sDimCible6 , sSubsetZero , '615614' , nDebug ) ;
SubsetElementInsert ( sDimCible6 , sSubsetZero , '615615' , nDebug ) ;
SubsetElementInsert ( sDimCible6 , sSubsetZero , '615618' , nDebug ) ;
SubsetElementInsert ( sDimCible6 , sSubsetZero , '615620' , nDebug ) ;
SubsetElementInsert ( sDimCible6 , sSubsetZero , '615622' , nDebug ) ;
SubsetElementInsert ( sDimCible6 , sSubsetZero , '615623' , nDebug ) ;
SubsetElementInsert ( sDimCible6 , sSubsetZero , '615625' , nDebug ) ;
SubsetElementInsert ( sDimCible6 , sSubsetZero , '615626' , nDebug ) ;
SubsetElementInsert ( sDimCible6 , sSubsetZero , '615627' , nDebug ) ;
SubsetElementInsert ( sDimCible6 , sSubsetZero , '615630' , nDebug ) ;
SubsetElementInsert ( sDimCible6 , sSubsetZero , '615631' , nDebug ) ;
SubsetElementInsert ( sDimCible6 , sSubsetZero , '615632' , nDebug ) ;
SubsetElementInsert ( sDimCible6 , sSubsetZero , '615633' , nDebug ) ;
SubsetElementInsert ( sDimCible6 , sSubsetZero , '615634' , nDebug ) ;
SubsetElementInsert ( sDimCible6 , sSubsetZero , '615636' , nDebug ) ;
SubsetElementInsert ( sDimCible6 , sSubsetZero , '615640' , nDebug ) ;
SubsetElementInsert ( sDimCible6 , sSubsetZero , '615645' , nDebug ) ;
SubsetElementInsert ( sDimCible6 , sSubsetZero , '615648' , nDebug ) ;

# m_Compte_Exploitation
IF ( SubsetExists( sDimCible, sSubsetZero ) = 1);
  SubsetDestroy ( sDimCible, sSubsetZero ) ;
ENDIF;
SubsetCreate ( sDimCible , sSubsetZero , nDebug ) ; 
SubsetElementInsert ( sDimCible , sSubsetZero , 'Montant' , nDebug ) ;

# On assigne les sous-ensembles à leur vue
ViewSubsetAssign ( sCubeCible , sVueZero , sDimCible1 , sSubsetZero ) ; 
ViewSubsetAssign ( sCubeCible , sVueZero , sDimCible2 , sSubsetZero ) ; 
ViewSubsetAssign ( sCubeCible , sVueZero , sDimCible3 , sSubsetZero ) ; 
ViewSubsetAssign ( sCubeCible , sVueZero , sDimCible4 , sSubsetZero ) ; 
ViewSubsetAssign ( sCubeCible , sVueZero , sDimCible5 , sSubsetZero ) ;
ViewSubsetAssign ( sCubeCible , sVueZero , sDimCible6 , sSubsetZero ) ;
ViewSubsetAssign ( sCubeCible , sVueZero , sDimCible , sSubsetZero ) ;


# RAZ de la vue zero
ViewZeroOut( sCubeCible, sVueZero );
#endregion
#region Data


# Controle du nombre de caractère code magasin ( doit être sur 3 caractère )
nLong = LONG( Code_du_GIE );

IF ( nLong = 1 ) ;
  sMagasin = '00' | Code_du_GIE ;
ELSEIF ( nLong = 2 ) ;
  sMagasin = '0' | Code_du_GIE ;
ELSEIF ( nLong = 3 ) ;
  sMagasin = Code_du_GIE ;
ENDIF ;

# Mise en place d'un fichier de rejet si des magasins n'existent pas dans la dimension magasin

IF ( nEnteteMag = 0 ) ;
  ASCIIOutput ( sRejet , 'Code_Magasin' , 'Motif_Rejet' ) ;
  nEnteteMag = 1 ;
ENDIF ;

IF ( DIMIX ( 'Magasin' , sMagasin ) =0 ) ;
  ASCIIOutput ( sRejet , sMagasin , 'Le magasin n' | CHAR ( 39 ) | 'est pas présent dans la dimension Magasin' ) ;
  nError = nError + 1 ;
  ItemSkip ;
ENDIF ;


# récupération du mois et année d'ouverture du magasin

sMoisOuverture = 'M' | subst( ATTRS ('Magasin',sMagasin, 'Date_Ouverture' ),4, 2 ) ;
nIndexMoisOuverture = DimIX( 'Mois', sMoisOuverture );
nAnnéeOuverture = StringToNumber(subst( ATTRS ('Magasin',sMagasin, 'Date_Ouverture' ),7, 4 ) ) ;

# Test par rapport à l'année et mois d'ouverture du magasin
# OK = 0 : pas pris en compte
# OK = 1 : prend en compte à partir du mois et année d'ouverture du magasin
# OK = 2 : prend tous les mois

nAnneeDebutExercice = StringToNumber( subst(sExercice, 1,4 ) );
nAnneeFinExercice = StringToNumber( subst(sExercice, 6,10 ) );

OK = 0 ;

If ( nAnnéeOuverture < nAnneeDebutExercice ) ;
     OK = 2 ;
EndIf ;

If ( ( nAnnéeOuverture = nAnneeDebutExercice ) & ( nIndexMoisOuverture > DimIX('Mois', 'M12') ) ) ;
     OK = 2 ;
EndIf ;

If ( ( nAnnéeOuverture = nAnneeDebutExercice ) & ( nIndexMoisOuverture <= DimIX('Mois', 'M12') ) ) ;
     OK = 1 ;
EndIf ;

If (( nAnnéeOuverture = nAnneeFinExercice ) & ( nIndexMoisOuverture > DimIX('Mois', 'M12') ) )  ;
     OK = 1 ;
EndIf ;


# pour chaque mois après l'ouverture du magasin, mise à jour Montant*1/12 pour chaque poste budgetaire  

IF ( nEnteteRPb = 0 ) ;
	ASCIIOutput ( sRejet , 'Poste_Budgetaire' , 'Motif_Rejet' ) ;
	nEnteteRPb = 1 ;
ENDIF ;

x = 12 ;




While ( x > 0 ) ;

    sX=NumberToString(x);
    
    If (LONG(sX)=1) ;
        sMois = 'M0' | sX ;
    Else ;
        sMois = 'M' | sX ;
    EndIf ;
    
    i = DimIX ('Mois', sMois  ) ;
    

	If ( ( ( i >= nIndexMoisOuverture ) & (OK = 1) ) % ( OK = 2 ) ); 
 		IF ( ( DIMIX ( 'Poste_Budgetaire' , '615610' )=0) & (nEntete615610=0)) ;
			ASCIIOutput ( sRejet , '615610' , 'Le poste Budgetaire n' | CHAR ( 39 ) | 'est pas présent dans la dimension Poste_Budgetaire' ) ;
			nError = nError + 1 ;
            nEntete615610=1;
		ElseIf (nEntete615610=0);
			CellPutN ( V615610 \ 12 , sCubeCible , sExercice, sVersion, sScenario, sMois, sMagasin, '615610', 'Montant' ) ;
		ENDIF ;

		IF ( ( DIMIX ( 'Poste_Budgetaire' , '615611' )=0) & (nEntete615611=0)) ;
			ASCIIOutput ( sRejet , '615611' , 'Le poste Budgetaire n' | CHAR ( 39 ) | 'est pas présent dans la dimension Poste_Budgetaire' ) ;
			nError = nError + 1 ;
            nEntete615611=1;
		ElseIf (nEntete615611=0);
			CellPutN ( V615611 \ 12 , sCubeCible , sExercice, sVersion, sScenario, sMois, sMagasin, '615611', 'Montant' ) ;
		ENDIF ;

		IF ( ( DIMIX ( 'Poste_Budgetaire' , '615612' )=0) & (nEntete615612=0)) ;
			ASCIIOutput ( sRejet , '615612' , 'Le poste Budgetaire n' | CHAR ( 39 ) | 'est pas présent dans la dimension Poste_Budgetaire' ) ;
			nError = nError + 1 ;
            nEntete615612=1;
		ElseIf (nEntete615612=0);
			CellPutN ( V615612 \ 12 , sCubeCible , sExercice, sVersion, sScenario, sMois, sMagasin, '615612', 'Montant' ) ;
		ENDIF ;

		IF ( ( DIMIX ( 'Poste_Budgetaire' , '615613' )=0) & (nEntete615613=0)) ;
			ASCIIOutput ( sRejet , '615613' , 'Le poste Budgetaire n' | CHAR ( 39 ) | 'est pas présent dans la dimension Poste_Budgetaire' ) ;
			nError = nError + 1 ;
            nEntete615613=1;
		ElseIf (nEntete615613=0);
			CellPutN ( V615613 \ 12 , sCubeCible , sExercice, sVersion, sScenario, sMois, sMagasin, '615613', 'Montant' ) ;
		ENDIF ;

		IF ( ( DIMIX ( 'Poste_Budgetaire' , '615614' )=0) & (nEntete615614=0)) ;
			ASCIIOutput ( sRejet , '615614' , 'Le poste Budgetaire n' | CHAR ( 39 ) | 'est pas présent dans la dimension Poste_Budgetaire' ) ;
			nError = nError + 1 ;
            nEntete615614=1;
		ElseIf (nEntete615614=0);
			CellPutN ( V615614 \ 12 , sCubeCible , sExercice, sVersion, sScenario, sMois, sMagasin, '615614', 'Montant' ) ;
		ENDIF ;

		IF ( ( DIMIX ( 'Poste_Budgetaire' , '615615' )=0) & (nEntete615615=0)) ;
			ASCIIOutput ( sRejet , '615615' , 'Le poste Budgetaire n' | CHAR ( 39 ) | 'est pas présent dans la dimension Poste_Budgetaire' ) ;
			nError = nError + 1 ;
            nEntete615615=1;
		ElseIf (nEntete615615=0);
			CellPutN ( V615615 \ 12 , sCubeCible , sExercice, sVersion, sScenario, sMois, sMagasin, '615615', 'Montant' ) ;
		ENDIF ;

		IF ( ( DIMIX ( 'Poste_Budgetaire' , '615618' )=0) & (nEntete615618=0)) ;
			ASCIIOutput ( sRejet , '615618' , 'Le poste Budgetaire n' | CHAR ( 39 ) | 'est pas présent dans la dimension Poste_Budgetaire' ) ;
			nError = nError + 1 ;
            nEntete615618=1;
		ElseIf (nEntete615618=0);
			CellPutN ( V615618 \ 12 , sCubeCible , sExercice, sVersion, sScenario, sMois, sMagasin, '615618', 'Montant' ) ;
		ENDIF ;

		IF ( ( DIMIX ( 'Poste_Budgetaire' , '615620' )=0) & (nEntete615620=0)) ;
			ASCIIOutput ( sRejet , '615620' , 'Le poste Budgetaire' | CHAR ( 39 ) | 'est pas présent dans la dimension Poste_Budgetaire' ) ;
			nError = nError + 1 ;
            nEntete615620=1;
		ElseIf (nEntete615620=0);
			CellPutN ( V615620 \ 12 , sCubeCible , sExercice, sVersion, sScenario, sMois, sMagasin, '615620', 'Montant' ) ;
		ENDIF ;

		IF ( ( DIMIX ( 'Poste_Budgetaire' , '615622' )=0) & (nEntete615622=0)) ;
			ASCIIOutput ( sRejet , '615622' , 'Le poste Budgetaire n' | CHAR ( 39 ) | 'est pas présent dans la dimension Poste_Budgetaire' ) ;
			nError = nError + 1 ;
            nEntete615622=1;
		ElseIf (nEntete615622=0);
			CellPutN ( V615622 \ 12 , sCubeCible , sExercice, sVersion, sScenario, sMois, sMagasin, '615622', 'Montant' ) ;
		ENDIF ;

		IF ( ( DIMIX ( 'Poste_Budgetaire' , '615623' )=0) & (nEntete615623=0)) ;
			ASCIIOutput ( sRejet , '615623' , 'Le poste Budgetaire n' | CHAR ( 39 ) | 'est pas présent dans la dimension Poste_Budgetaire' ) ;
			nError = nError + 1 ;
            nEntete615623=1;
		Else;
			CellPutN ( V615623 \ 12 , sCubeCible , sExercice, sVersion, sScenario, sMois, sMagasin, '615623', 'Montant' ) ;
		ENDIF ;

		IF ( ( DIMIX ( 'Poste_Budgetaire' , '615625' )=0) & (nEntete615625=0)) ;
			ASCIIOutput ( sRejet , '615625' , 'Le poste Budgetaire n' | CHAR ( 39 ) | 'est pas présent dans la dimension Poste_Budgetaire' ) ;
			nError = nError + 1 ;
            nEntete615610=1;
		ElseIf (nEntete615625=0);
			CellPutN ( V615625 \ 12 , sCubeCible , sExercice, sVersion, sScenario, sMois, sMagasin, '615625', 'Montant' ) ;
		ENDIF ;

		IF ( ( DIMIX ( 'Poste_Budgetaire' , '615626' )=0) & (nEntete615626=0)) ;
			ASCIIOutput ( sRejet , '615626' , 'Le poste Budgetaire' | CHAR ( 39 ) | 'est pas présent dans la dimension Poste_Budgetaire' ) ;
			nError = nError + 1 ;
            nEntete615626=1;
		ElseIf (nEntete615626=0);
			CellPutN ( V615626 \ 12 , sCubeCible , sExercice, sVersion, sScenario, sMois, sMagasin, '615626', 'Montant' ) ;
		ENDIF ;

		IF ( ( DIMIX ( 'Poste_Budgetaire' , '615627' )=0) & (nEntete615627=0)) ;
			ASCIIOutput ( sRejet , '615627' , 'Le poste Budgetaire n' | CHAR ( 39 ) | 'est pas présent dans la dimension Poste_Budgetaire' ) ;
			nError = nError + 1 ;
            nEntete615627=1;
		ElseIf (nEntete615627=0);
			CellPutN ( V615627 \ 12 , sCubeCible , sExercice, sVersion, sScenario, sMois, sMagasin, '615627', 'Montant' ) ;
		ENDIF ;

		IF ( ( DIMIX ( 'Poste_Budgetaire' , '615630' )=0) & (nEntete615630=0)) ;
			ASCIIOutput ( sRejet , '615630' , 'Le poste Budgetaire n' | CHAR ( 39 ) | 'est pas présent dans la dimension Poste_Budgetaire' ) ;
			nError = nError + 1 ;
            nEntete615630=1;
		ElseIf (nEntete615630=0);
			CellPutN ( V615630 \ 12 , sCubeCible , sExercice, sVersion, sScenario, sMois, sMagasin, '615630', 'Montant' ) ;
		ENDIF ;

		IF ( ( DIMIX ( 'Poste_Budgetaire' , '615631' )=0) & (nEntete615631=0)) ;
			ASCIIOutput ( sRejet , '615631' , 'Le poste Budgetaire n' | CHAR ( 39 ) | 'est pas présent dans la dimension Poste_Budgetaire' ) ;
			nError = nError + 1 ;
            nEntete615631=1;
		ElseIf (nEntete615631=0);
			CellPutN ( V615631 \ 12 , sCubeCible , sExercice, sVersion, sScenario, sMois, sMagasin, '615631', 'Montant' ) ;
		ENDIF ;

		IF ( ( DIMIX ( 'Poste_Budgetaire' , '615632' )=0) & (nEntete615632=0)) ;
			ASCIIOutput ( sRejet , '615632' , 'Le poste Budgetaire n' | CHAR ( 39 ) | 'est pas présent dans la dimension Poste_Budgetaire' ) ;
			nError = nError + 1 ;
            nEntete615632=1;
		ElseIf (nEntete615632=0);
			CellPutN ( V615632 \ 12 , sCubeCible , sExercice, sVersion, sScenario, sMois, sMagasin, '615632', 'Montant' ) ;
		ENDIF ;

		IF ( ( DIMIX ( 'Poste_Budgetaire' , '615633' )=0) & (nEntete615633=0)) ;
			ASCIIOutput ( sRejet , '615633' , 'Le poste Budgetaire n' | CHAR ( 39 ) | 'est pas présent dans la dimension Poste_Budgetaire' ) ;
			nError = nError + 1 ;
            nEntete615633=1;
		ElseIf (nEntete615633=0);
			CellPutN ( V615633 \ 12 , sCubeCible , sExercice, sVersion, sScenario, sMois, sMagasin, '615633', 'Montant' ) ;
		ENDIF ;

		IF ( ( DIMIX ( 'Poste_Budgetaire' , '615634' )=0) & (nEntete615634=0)) ;
			ASCIIOutput ( sRejet , '615634' , 'Le poste Budgetaire n' | CHAR ( 39 ) | 'est pas présent dans la dimension Poste_Budgetaire' ) ;
			nError = nError + 1 ;
            nEntete615634=1;
		ElseIf (nEntete615634=0);
			CellPutN ( V615634 \ 12 , sCubeCible , sExercice, sVersion, sScenario, sMois, sMagasin, '615634', 'Montant' ) ;
		ENDIF ;

		IF ( ( DIMIX ( 'Poste_Budgetaire' , '615636' )=0) & (nEntete615636=0)) ;
			ASCIIOutput ( sRejet , '615636' , 'Le poste Budgetaire n' | CHAR ( 39 ) | 'est pas présent dans la dimension Poste_Budgetaire' ) ;
			nError = nError + 1 ;
            nEntete615636=1;
		ElseIf (nEntete615636=0);
			CellPutN ( V615636 \ 12 , sCubeCible , sExercice, sVersion, sScenario, sMois, sMagasin, '615636', 'Montant' ) ; 
		ENDIF ;

		IF ( ( DIMIX ( 'Poste_Budgetaire' , '615640' )=0) & (nEntete615640=0)) ;
			ASCIIOutput ( sRejet , '615640' , 'Le poste Budgetaire n' | CHAR ( 39 ) | 'est pas présent dans la dimension Poste_Budgetaire' ) ;
			nError = nError + 1 ;
            nEntete615640=1;
		ElseIf (nEntete615640=0);
			CellPutN ( V615640 \ 12 , sCubeCible , sExercice, sVersion, sScenario, sMois, sMagasin, '615640', 'Montant' ) ;
		ENDIF ;

		IF ( ( DIMIX ( 'Poste_Budgetaire' , '615645' )=0) & (nEntete615645=0)) ;
			ASCIIOutput ( sRejet , '615645' , 'Le poste Budgetaire n' | CHAR ( 39 ) | 'est pas présent dans la dimension Poste_Budgetaire' ) ;
			nError = nError + 1 ;
            nEntete615645=1;
		ElseIf (nEntete615645=0);
			CellPutN ( V615645 \ 12 , sCubeCible , sExercice, sVersion, sScenario, sMois, sMagasin, '615645', 'Montant' ) ;
		ENDIF ;

		IF ( ( DIMIX ( 'Poste_Budgetaire' , '615648' )=0) & (nEntete615648=0)) ;
			ASCIIOutput ( sRejet , '615648' , 'Le poste Budgetaire n' | CHAR ( 39 ) | 'est pas présent dans la dimension Poste_Budgetaire' ) ;
			nError = nError + 1 ;
            nEntete615648=1;
		ElseIf (nEntete615648=0);
			CellPutN ( V615648 \ 12 , sCubeCible , sExercice, sVersion, sScenario, sMois, sMagasin, '615648', 'Montant' ) ;
		EndIf ; 
	EndIf;
	
	x = x - 1 ; 

End ;



#endregion
#region Epilog
#------------------------------------------------ MONITORING  ------------------------------------------------#

# Declaration variables et constantes

Z_FIN_EXE =  StringToNumber(TimSt (Now, '\h'))*3600 +StringToNumber(TimSt (Now, '\i'))*60+StringToNumber(TimSt (Now, '\s'));
Z_PERIODE=subst(TODAY(1),1,4) | subst(TODAY(1),6,2);

Z_STATUS=IF(GetProcessErrorFilename@='','OK','KO');
Z_TEMPS_EXECUTION= Z_FIN_EXE - Z_DEBUT_EXE;
# HEURE D'EXECUTION
nNewFormatId  =  NewDateFormatter ( 'fr-FR' , 'Europe/Paris' , 'serial' , 'medium' , 'datetime' );
Z_LOCAL_TIME = FormatDate ( NOW () , 'yyyy-MM-dd H:mm' , nNewFormatId );
Z_UTILISATEUR = TM1User;

# Ecriture des informations sur le processus dans le cube ParametresSources                       

nDebut= SCAN( 'pans:u:', Z_UTILISATEUR );
nDebutLong = LONG('pans:u:');
nStart = nDebut + nDebutLong ;
nTotal = LONG(Z_UTILISATEUR) ;
Z_UTILISATEUR = SUBST(Z_UTILISATEUR, nStart, nTotal - nStart - 1) ;

CELLPUTS( Z_STATUS , sCubeParamS , cMainProcName , 'Statut' );
CELLPUTN( Z_TEMPS_EXECUTION , sCubeParamS ,  cMainProcName ,'TempsExe');
CELLPUTS( Z_LOCAL_TIME, sCubeParamS , cMainProcName ,'DernExe');
CELLPUTS( Z_UTILISATEUR, sCubeParamS , cMainProcName ,'txt_Utilisateur' );

#------------------------------------------------ FIN - MONITORING  ------------------------------------------------#

# Message si erreur du processus
IF ( nError > 0 ) ;
  sMessage = 'Des rejets ont été générés, veuillez consulter le répertoire pour plus de détail' ;
  ItemReject( sMessage );
ENDIF ;
#endregion