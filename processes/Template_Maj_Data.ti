#region Prolog

#*****************************************************************************
# CREATEUR : Charles THIERRY
# DATE DE CREATION : 23/06/2023
# DERNIERE MODIFICATION EFFECTUEE PAR : 
# DATE DE DERNIERE MODIFICATION : ../../....
# DESCRIPTION DU PROCESSUS : 
# Transfert des données du cube source ???? vers le cube ?????.
#*****************************************************************************

### 0.Définition des variables du monitoring

sCubeParamT	             = 'ParametrageT' ;
sCubeParamP              = 'ParametresSources' ;
cMainProcName       = GetProcessName();
cRepertoireRacine   = GetProcessErrorFileDirectory;
cTimeStamp          = TimSt( Now, '\Y\m\d\h\i\s' );
cRandomInt          = NumberToString( INT( RAND( ) * 1000 ));
cTimeProcess        = cTimeStamp | '_' | cRandomInt;
Z_DEBUT_EXE =  StringToNumber(TimSt (Now, '\h'))*3600 +StringToNumber(TimSt (Now, '\i'))*60+StringToNumber(TimSt (Now, '\s'));

IF ( SUBST ( TM1User() , 1 , 2 ) @= 'R*' ) ;
	cUtilisateur = 'Lanceur' ;
ELSE ;
	cUtilisateur        = TM1User();
ENDIF ;

### 1.Définition de la vue cible

# Pour suppression des vues et ss ensemble temporaire
nDebug = 1 ; 
# Le nom de la vue du cube :
sVueRaZ = 'RàZ_vue_' | Today (0) | '_' | GetProcessName () ; 
# Le nom des sous-ensembles
sSubsetRaZ = 'RàZ_Subset_' | Today (0) | '_' | GetProcessName () ; 
# Définition de la cible
sCubeCible = '' ; 
sDimCible1 = '' ; 
sDimCible2 = '' ;
sDimCible3 = '' ;
sDimCible4 = '' ; 
sDimCible5 = '' ; 
sDimCible = 'm_' ;

# Destruction pour recréation de la vue
ViewDestroy ( sCubeCible , sVueRaZ ) ;
ViewCreate ( sCubeCible , sVueRaZ ) ; 

# Création des sous-ensembles des dimensions du cube cible

# Exemple de selection d'un élément dans la dimension
# NomDimCible1
SubsetDestroy ( sDimCible1 , sSubsetRaZ ) ;
SubsetCreate ( sDimCible1 , sSubsetRaZ , nDebug ) ; 
SubsetElementInsert ( sDimCible1 , sSubsetRaZ , 'ElementDimensionCible1' , nDebug ) ;
ViewSubsetAssign ( sCubeCible , sVueRaZ , sDimCible1 , sSubsetRaZ ) ; 

# Exemple de selection de tous les niveaux 0 d'une dimension
# NomDimCible2
SubsetDestroy ( sDimCible2 , sSubsetRaZ ) ; 
StringMDX = '{TM1FILTERBYLEVEL ( { TM1SUBSETALL ( [ '| NomDimCible2 | ' ] ) } , 0 ) }'
SubsetCreateByMDX ( sSubsetRaZ , StringMDX , nDebug  ) ;
ViewSubsetAssign ( sCubeCible , sVueRaZ , sDimCible2 , sSubsetRaZ ) ; 

# Exemple de selection de tous les niveaux 0 d'une dimension excepté un élément
# NomDimCible3
sElementExcepte = 'Nom de l element que vous souhaitez retirer' ;
SubsetDestroy ( sDimCible3 , sSubsetRaZ ) ; 
StringMDX = '{ EXCEPT( {TM1FILTERBYLEVEL( {TM1SUBSETALL( [ '| NomDimCible3 |' ] )}, 0)}, { ['| NomDimCible3 |'].['| sElementExcepte |'] }) }' ;
SubsetCreateByMDX ( sSubsetRaZ , StringMDX , nDebug  ) ;
ViewSubsetAssign ( sCubeCible , sVueRaZ , sDimCible3 , sSubsetRaZ ) ; 

# Exemple de selection des enfant d'un element
# NomDimCible4
sElementParent = 'Nom du parent des elements que vous souhaitez selectionner' ;
SubsetDestroy ( sDimCible4 , sSubsetRaZ ) ; 
StringMDX = '{TM1DRILLDOWNMEMBER( {TM1FILTERBYPATTERN( {TM1SUBSETALL( [ '| NomDimCible4 |' ] )}, "' | sElementParent | '*")}, ALL, RECURSIVE )}' ;
SubsetCreateByMDX ( sSubsetRaZ , StringMDX , nDebug  ) ;
ViewSubsetAssign ( sCubeCible , sVueRaZ , sDimCible4 , sSubsetRaZ ) ; 

# Exemple de selection d'element selon un attribut
# NomDimCible5
sAttribut = 'Nom de l attribut' ;
sNomAttribut = 'Nom de l element de l attribut a rechercher' ;
SubsetDestroy ( sDimCible5 , sSubsetRaZ ) ;
StringMDX = '{FILTER( {TM1SUBSETALL( [ '| NomDimCible5 |' ] )}, [ '| NomDimCible5 |' ].[ '| sAttribut |' ] = "' | sNomAttribut | '")}' ;
SubsetCreateByMDX ( sSubsetRaZ , StringMDX , nDebug  ) ;
ViewSubsetAssign ( sCubeCible , sVueRaZ , sDimCible5 , sSubsetRaZ ) ; 

# Dimension mesure : tous les indicateurs
SubsetDestroy ( sDimCible , sSubsetRaZ ) ; 
SubsetCreateByMDX ( sSubsetRaZ , '{TM1FILTERBYLEVEL ( { TM1SUBSETALL ( [ '| sDimCible | ' ] ) } , 0 ) }' ) ;

# On assigne tous les sous-ensembles créés à la vue de cube
ViewSubsetAssign ( sCubeCible , sVueRaZ , sDimCible1 , sSubsetRaZ ) ; 
ViewSubsetAssign ( sCubeCible , sVueRaZ , sDimCible2 , sSubsetRaZ ) ; 
ViewSubsetAssign ( sCubeCible , sVueRaZ , sDimCible3 , sSubsetRaZ ) ; 
ViewSubsetAssign ( sCubeCible , sVueRaZ , sDimCible4 , sSubsetRaZ ) ; 
ViewSubsetAssign ( sCubeCible , sVueRaZ , sDimCible5 , sSubsetRaZ ) ; 
ViewSubsetAssign ( sCubeCible , sVueRaZ , sDimCible , sSubsetRaZ ) ; 

# Suppression des données qui sont dans la vue sVue
ViewZeroOut ( sCubeCible , sVueRaZ ) ; 

# La vue étant désormais vide, nous pouvons la détruire
ViewDestroy ( sCubeCible , sVueRaZ ) ;

# On détruit les sous-ensembles des dimensions
SubsetDestroy ( sDimCible1 , sSubsetRaZ ) ;
SubsetDestroy ( sDimCible2 , sSubsetRaZ ) ;
SubsetDestroy ( sDimCible3 , sSubsetRaZ ) ;
SubsetDestroy ( sDimCible4 , sSubsetRaZ ) ;
SubsetDestroy ( sDimCible5 , sSubsetRaZ ) ;
SubsetDestroy ( sDimCible , sSubsetRaZ ) ;

##### Fin de la vue CIBLE #####

##### Debut de la vue SOURCE #####

# Définition de la source du processus

sCubeSource = '' ; 

sDimSource1 = '' ; 
sDimSource2 = '' ;
sDimSource3 = '' ; 
sDimSource4 = '' ; 
sDimSource5 = '' ; 
sDimSource6 = '' ; 
sDimSource = 'm_' ; 

# Le nom de la vue du cube :
sVueSource = 'Source_vue_' | Today (0) | '_' | GetProcessName () ; 
# Le nom des sous-ensembles
sSubsetSource = 'Source_Subset_' | Today (0) | '_' | GetProcessName () ; 
# Destruction pour recréation de la vue
ViewDestroy ( sCubeSource , sVueSource ) ;
ViewCreate ( sCubeSource , sVueSource ) ; 

# Création des sous-ensembles des dimensions du cube source ????

#Exemple de selection d'un élément dans la dimension
# NomDimSource1
SubsetDestroy ( sDimSource1 , sSubsetSource ) ;
SubsetCreate ( sDimSource1 , sSubsetSource , nDebug ) ; 
SubsetElementInsert ( sDimSource1 , sSubsetSource , 'ElementDimensionSource1' , nDebug ) ;
ViewSubsetAssign ( sCubeSource , sVueSource , sDimSource1 , sSubsetSource ) ; 

# Exemple de selection de tous les niveaux 0 d'une dimension
# NomDimSource2
SubsetDestroy ( sDimSource2 , sSubsetSource ) ; 
StringMDX = '{TM1FILTERBYLEVEL ( { TM1SUBSETALL ( [ '| NomDimSource2 | ' ] ) } , 0 ) }'
SubsetCreateByMDX ( sSubsetSource , StringMDX , nDebug  ) ;
ViewSubsetAssign ( sCubeSource , sVueSource , sDimSource2 , sSubsetSource ) ; 

#  Exemple de selection de tous les niveaux 0 d'une dimension excepté un élément
# NomDimSource3
sElementExcepte = 'Nom de l element que vous souhaitez retirer' ;
SubsetDestroy ( sDimSource3 , sSubsetSource ) ; 
StringMDX = '{ EXCEPT( {TM1FILTERBYLEVEL( {TM1SUBSETALL( [ '| NomDimSource3 |' ] )}, 0)}, { ['| NomDimSource3 |'].['| sElementExcepte |'] }) }' ;
SubsetCreateByMDX ( sSubsetSource , StringMDX , nDebug  ) ;
ViewSubsetAssign ( sCubeSource , sVueSource , sDimSource3 , sSubsetSource ) ; 

# Exemple de selection des enfant d'un element
# NomDimSource4
sElementParent = 'Nom du parent des elements que vous souhaitez selectionner' ;
SubsetDestroy ( sDimSource4 , sSubsetSource ) ; 
StringMDX = '{TM1DRILLDOWNMEMBER( {TM1FILTERBYPATTERN( {TM1SUBSETALL( [ '| NomDimSource4 |' ] )}, "' | sElementParent | '*")}, ALL, RECURSIVE )}' ;
SubsetCreateByMDX ( sSubsetSource , StringMDX , nDebug  ) ;
ViewSubsetAssign ( sCubeSource , sVueSource , sDimSource4 , sSubsetSource ) ; 

# Exemple de selection d'element selon un attribut
# NomDimSource5
sAttribut = 'Nom de l attribut' ;
sNomAttribut = 'Nom de l element de l attribut a rechercher' ;
SubsetDestroy ( sDimSource5 , sSubsetSource ) ;
StringMDX = '{FILTER( {TM1SUBSETALL( [ '| NomDimSource5 |' ] )}, [ '| NomDimSource5 |' ].[ '| sAttribut |' ] = "' | sNomAttribut | '")}' ;
SubsetCreateByMDX ( sSubsetSource , StringMDX , nDebug  ) ;
ViewSubsetAssign ( sCubeSource , sVueSource , sDimSource5 , sSubsetSource ) ; 

# NomDim6
SubsetDestroy ( sDimSource6 , sSubsetSource ) ; 
StringMDX = '{TM1FILTERBYLEVEL ( { TM1SUBSETALL ( [ '| NomDimSource6 | ' ] ) } , 0 ) }'
SubsetCreateByMDX ( sSubsetSource , StringMDX , nDebug  ) ;
ViewSubsetAssign ( sCubeSource , sVueSource , sDimSource6 , sSubsetSource ) ; 

# NomDimMesure
SubsetDestroy ( sDimSource , sSubsetSource ) ; 
StringMDX = '{TM1FILTERBYLEVEL ( { TM1SUBSETALL ( [ '| NomDimSource | ' ] ) } , 0 ) }'
SubsetCreateByMDX ( sSubsetSource , StringMDX , nDebug  ) ;
ViewSubsetAssign ( sCubeSource , sVueSource , sDimSource , sSubsetSource ) ; 

# On ne traite pas les croisements égaux à zéro :
ViewExtractSkipZeroesSet ( sCubeSource , sVueSource , 1 ) ; 
# On ne traite pas les croisements concernés par des règles de calculs
ViewExtractSkipRuleValuesSet ( sCubeSource , sVueSourCe , 0 ) ;
# On traite les croisements concernés par des cellules consolidéees 
ViewExtractSkipCalcsSet ( sCubeSource , sVueSource , 0 ) ; 

# On assigne les sous-ensembles à leur vue
ViewSubsetAssign ( sCubeSource , sVueSource , sDimSource1 , sSubsetSource ) ; 
ViewSubsetAssign ( sCubeSource , sVueSource , sDimSource2 , sSubsetSource ) ; 
ViewSubsetAssign ( sCubeSource , sVueSource , sDimSource3 , sSubsetSource ) ; 
ViewSubsetAssign ( sCubeSource , sVueSource , sDimSource4 , sSubsetSource ) ; 
ViewSubsetAssign ( sCubeSource , sVueSource , sDimSource5 , sSubsetSource ) ; 
ViewSubsetAssign ( sCubeSource , sVueSource , sDimSource6 , sSubsetSource ) ; 
ViewSubsetAssign ( sCubeSource , sVueSource , sDimSource , sSubsetSource ) ; 


# Définition de la source du processu : 
DataSourceNameForServer  = sCubeSource ; 
DataSourceCubeView = sVueSource ; 

#endregion
#region Data


# Exemple boucle sur tous les elements fins d'une dimension
sDimBoucle = ''; 

# Exemple Récupération d'un attribut texte
sMapping = AttrS ( sDimBoucle , NomElement , 'Nom attribut' ) ;

# La taille de la boucle correspond au nombre d'éléments de la dimension
nTailleBoucle = DimSiz ( sDimBoucle ) ;

# Début de la boucle : tant que la variable nTailleBoucle est supérieure à 0, nous allons réaliser les traitements suivants :
While ( nTailleboucle > 0 ) ;

	# Récupération du produit portant l'index correspondant à "nTailleBoucle"
	sProduit = DimNm ( sDimBoucle , nTailleBoucle ) ; 
    
	# Test pour connaître le niveau du produit : est-ce un élément consolidé ou un élément fin ?
	# Nous faisons les traitements seulement si le produit est un élément fin
	If ( ElLev ( sDimBoucle , sProduit ) = 0 ) ; 
    
		# Exemple récupératio d'un taux depuis un autre cube
		nTaux = CellGetN ( 'nom Cube', sAnnee, sProduit , sMapping | '_PRCT'  ) ; 
		# Détermination du montant à insérer dans le cube ProfitAndLoss : montant de la ligne * clé de répartition
		nMontant = Value * nTaux ;
        
		# Insertion du montant ventilé sur le cube cible
		CellIncrementN ( nMontant , sCubeCible , LAN_Version , LAN_Societe , sProduit , sAnnee , LAN_Mois , sMapping ) ; 
        
	EndIf ; 
	# Réduction de nTailleBoucle de 1 pour passer au produit suivant.
	nTailleBoucle = nTailleBoucle - 1 ; 
# Fin des traitements de la boucle, on retourne au ‘’While’’ pour faire le test de condition	
End ;

#endregion
#region Epilog

#------------------------------------------------ MONITORING  ------------------------------------------------#

# Declaration variables et constantes

Z_FIN_EXE =  StringToNumber(TimSt (Now, '\h'))*3600 +StringToNumber(TimSt (Now, '\i'))*60+StringToNumber(TimSt (Now, '\s'));
Z_PERIODE=subst(TODAY(1),1,4) | subst(TODAY(1),6,2);

Z_STATUS=IF(GetProcessErrorFilename@='','OK','KO');
Z_TEMPS_EXECUTION= Z_FIN_EXE - Z_DEBUT_EXE;
Z_LOCAL_TIME=   today(1) | '  -  ' | subst(TIME,1,2) | 'h' | subst(TIME,4,2);
Z_UTILISATEUR = TM1User;


# Ecriture des informations sur le processus dans le cube ParametresSources                       

CELLPUTS( Z_STATUS , sCubeParamP , cMainProcName , 'Statut' );
CELLPUTN( Z_TEMPS_EXECUTION , sCubeParamP ,  cMainProcName ,'TempsExe');
CELLPUTS( Z_LOCAL_TIME, sCubeParamP , cMainProcName ,'DernExe');
CELLPUTS( Z_UTILISATEUR, sCubeParamP , cMainProcName ,'txt_Utilisateur' );

#------------------------------------------------ FIN - MONITORING  ------------------------------------------------#
#endregion