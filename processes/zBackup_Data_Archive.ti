#region Prolog

#****Begin: Generated Statements***
#****End: Generated Statements****

#***********************************************************************************************************
# CREATEUR : CTY
# DATE DE CREATION : 06/07/2023
# DERNIERE MODIFICATION EFFECTUEE PAR : 
# DATE DE DERNIERE MODIFICATION : ../../
# DESCRIPTION DU PROCESSUS : Archive le répertoire DATA dans une archive.zip
#
# Voir le fichier 7zip_archive_backup.bat pour plus d'informations
# Le chemin indiqué ci-dessous pour le .bat peut être modifié.
#***********************************************************************************************************

#***********************************************************************************************************
#                                  Définition des cubes
#***********************************************************************************************************
                                                                                                                                                                                                                                                                                                                                           
sCubeParamT = 'ParametrageT' ;
sCubeParamP = 'ParametresSources' ;

#**********************************************************************************************************
#                                  Définition des constantes
#***********************************************************************************************************

cMainProcName = GetProcessName();
cRepertoireRacine = GetProcessErrorFileDirectory;
cTimeStamp = TimSt( Now, '\Y\m\d\h\i\s' );
cRandomInt = NumberToString( INT( RAND( ) * 1000 ));
cTimeProcess = cTimeStamp | '_' | cRandomInt;
Z_DEBUT_EXE =  StringToNumber(TimSt (Now, '\h'))*3600 +StringToNumber(TimSt (Now, '\i'))*60+StringToNumber(TimSt (Now, '\s'));

# Gestion du lancement par tâche planifié
IF ( SUBST ( TM1User() , 1 , 2 ) @= 'R*' ) ;
	cUtilisateur = 'Lanceur' ;
ELSE ;
	cUtilisateur        = TM1User();
ENDIF ;

#**********************************************************************************************************
#                                  Définition des variables
#**********************************************************************************************************

StringGlobalVariable('sProcessReturnCode');
NumericGlobalVariable('nProcessReturnCode');

#**********************************************************************************************************
#                                  Initialisation des variables
#**********************************************************************************************************

sCommandBat = '"' | pRepExe | pBackup | '"' ;

#**********************************************************************************************************
#                                  DEBUT DE zBACKUP_Data_Archive
#**********************************************************************************************************

ExecuteCommand( sCommandBat  | ' ' | pNomArchive | ' ' | pNbJours | ' ' | pTM1Data | ' ' | p7zExe | ' ' | pRepBackup , 1 );

#ASCIIOutput( '..\DEBUG\DebugzBackup.csv', pRepExe, pBackup, sCommandBat, pNomArchive, pNbJours, pTM1Data, p7zExe, pRepBackup );

#endregion
#region Metadata

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Data

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Epilog

#****Begin: Generated Statements***
#****End: Generated Statements****

#------------------------------------------------ MONITORING  ------------------------------------------------#

# Declaration variables et constantes

Z_FIN_EXE =  StringToNumber(TimSt (Now, '\h'))*3600 +StringToNumber(TimSt (Now, '\i'))*60+StringToNumber(TimSt (Now, '\s'));
Z_PERIODE=subst(TODAY(1),1,4) | subst(TODAY(1),6,2);

Z_STATUS=IF(GetProcessErrorFilename@='','OK','KO');
Z_TEMPS_EXECUTION= Z_FIN_EXE - Z_DEBUT_EXE;
Z_LOCAL_TIME=   today(1) | '  -  ' | subst(TIME,1,2) | 'h' | subst(TIME,4,2);
Z_UTILISATEUR = TM1User;

# Ecriture des informations sur le processus dans le cube ParametresSources                       

CELLPUTS( Z_STATUS , sCubeParamP , cMainProcName , 'Statut' );
CELLPUTN( Z_TEMPS_EXECUTION , sCubeParamP ,  cMainProcName ,'TempsExe');
CELLPUTS( Z_LOCAL_TIME, sCubeParamP , cMainProcName ,'DernExe');
CELLPUTS( Z_UTILISATEUR, sCubeParamP , cMainProcName ,'txt_Utilisateur' );

#------------------------------------------------ FIN - MONITORING  ------------------------------------------------#
#endregion