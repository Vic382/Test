#region Prolog

#****Begin: Generated Statements***
#****End: Generated Statements****

#***********************************************************************************************
# CREATEUR : MSI
# CREATION : 19/02/2019
# MODIFICATEUR : RCU
# MODIFICATION : 24/03/2020
# DESCRIPTION :  Suppression des objets avec un nommage spécificique
#************************************************************************************************

#
# Paramètre            , Type            , Valeur par défaut   , Question à poser
#
# pTech                  , Chaine         , zTI                        , Préfixe de l'objet à supprimer
#

#************************************************************************************************
# Définition des cubes
#************************************************************************************************

sCubeParamT = 'ParametrageT' ;
sCubeParamP = 'ParametresSources' ;

#************************************************************************************************
# Définition des dimensions
#************************************************************************************************

sDimTech = '}Dimensions' ;

#************************************************************************************************
# Définition des constantes
#************************************************************************************************

NumericGlobalVariable ('zLogNumero') ; 

cMainProcName	= GetProcessName();
cRepertoireRacine	= GetProcessErrorFileDirectory;
cTimeStamp	= TimSt( Now, '\Y\m\d\h\i\s' );
cRandomInt	= NumberToString( INT( RAND( ) * 1000 ));
cTimeProcess	= cTimeStamp | '_' | cRandomInt;
cUtilisateur	= TM1User();

#************************************************************************************************
# Définition des variables
#************************************************************************************************

sLog = CellGetN ( sCubeParamP , cMainProcName , 'Log');
If( sLog <> 1 );
	sLog = 0 ;
EndIf;

sDebug = CellGetN ( sCubeParamP , cMainProcName , 'Debug');
If( sDebug <> 1 );
	sDebug = 0 ;
EndIf;

# Pour échanger avec Process.Log.Create
NumericGlobalVariable ('zLogNumero') ;

#************************************************************************************************
# Initialisation des variables
#************************************************************************************************

zLogNumero	= 1 ;
nSelection	= 0 ;
nErreurs		= 0 ;

#************************************************************************************************
# Log start time
#************************************************************************************************

ExecuteProcess( 'Process_Log_Create', 'pProcesses' , cMainProcName , 'pDateExec' , cTimeProcess , 'pNumero' , zLogNumero , 'pType' , 'LOG' , 'pStatus' , 'START' , 'pV1' , pTech ) ;

#************************************************************************************************
# Contrôle des paramètres
#************************************************************************************************

if ( pTech @= '' ) ;
	nErreurs = nErreurs + 1 ;
	ExecuteProcess( 'Process_Log_Create', 'pProcesses' , cMainProcName , 'pDateExec' , cTimeProcess , 'pNumero' , zLogNumero , 'pType' , 'DEBUG' , 'pStatus' , 'FATAL' , 
	'pRef' , nErreurs , 'pV1' , 'pTech               : ' | pTech | ' valeur hors périmetre' ) ;
	ProcessBreak ;
Endif ;

#************************************************************************************************
# Traitement
#************************************************************************************************

# Suppression des vues
nTailleBoucleCube = DimSiz ( '}Cubes' ) ;
While ( nTailleBoucleCube > 0 ) ;
	sCube = DimNm ( '}Cubes' , nTailleBoucleCube ) ;
	# Test existence dimension subset
	If ( DimensionExists ( '}Views_' | sCube ) <> 0 ) ; 
		nTailleBoucleDimView = DimSiz (  '}Views_' | sCube ) ;
		While ( nTailleBoucleDimView > 0)  ;
			sView = DimNm (  '}Views_' | sCube , nTailleBoucleDimView ) ;
			If ( SubSt ( sView , 1 ,LONG(pTech) )@= pTech ) ; 
				ViewDestroy ( sCube , sView ) ;
			EndIf ; 
			nTailleBoucleDimView = nTailleBoucleDimView - 1 ; 
		End ; 
	EndIf ;
	nTailleBoucleCube = nTailleBoucleCube - 1 ; 
End ; 

# Suppression des sous-ensembles
nTailleBoucleDimension = DimSiz ( '}Dimensions' ) ;
While ( nTailleBoucleDimension > 0 ) ;
	sDim = DimNm ( '}Dimensions' , nTailleBoucleDimension ) ;
	# Test existence dimension subset
	If ( DimensionExists ( '}Subsets_' | sDim ) <> 0 ) ; 
		nTailleBoucleDimSubset = DimSiz (  '}Subsets_' | sDim ) ;
		While ( nTailleBoucleDimSubset > 0)  ;
			sSubset = DimNm (  '}Subsets_' | sDim , nTailleBoucleDimSubset ) ;
			If ( SubSt ( sSubset , 1 ,LONG(pTech) )@= pTech ) ; 
				SubsetDestroy ( sDim , sSubset ) ;
			EndIf ; 
			nTailleBoucleDimSubset = nTailleBoucleDimSubset - 1 ; 
		End ; 
	EndIf ;
	nTailleBoucleDimension = nTailleBoucleDimension - 1 ; 
End ; 
#endregion
#region Metadata

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Data

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Epilog

#****Begin: Generated Statements***
#****End: Generated Statements****

#************************************************************************************************
#      Log End time 
#************************************************************************************************
IF ( nErreurs =0 );
  ExecuteProcess( 'Process_Log_Create' , 'pProcesses' , cMainProcName , 'pDateExec' , cTimeProcess , 'pNumero' , zLogNumero , 'pType' , 'LOG' , 'pStatus' , 'INFO' ,
	'pRef' , nSelection , 'pV1' , 'Traitement OK' ) ;
ENDIF;

IF ( nErreurs <> 0 ) ;
  ExecuteProcess( 'Process_Log_Create' , 'pProcesses' , cMainProcName , 'pDateExec' , cTimeProcess , 'pNumero' , zLogNumero , 'pType' , 'LOG' , 'pStatus' , 'FATAL' ,
  	'pRef' , nErreurs , 'pV1' , 'Traitement echec' ) ;
ENDIF ;

#************************************************************************************************
# Contrôle des erreurs                                            
#************************************************************************************************

ExecuteProcess( 'Process_Log_Create' , 'pProcesses' , cMainProcName , 'pDateExec' , cTimeProcess , 'pNumero' , zLogNumero , 'pType' , 'LOG' , 'pStatus' , 'END' ) ;

ExecuteProcess( 'Process_Log_Create' , 'pProcesses' , cMainProcName , 'pDateExec' , cTimeProcess , 'pNumero' , zLogNumero , 'pType' , 'LOG' , 'pStatus' , If ( GetProcessErrorFilename @= '' , 'OK' , 'KO' ) , 'pV1' , 'Process exécuté en ' , 'pV2' , cUtilisateur ) ;

ExecuteProcess( 'Process_Log_Create' , 'pProcesses' , cMainProcName , 'pDateExec' , cTimeProcess , 'pNumero' , zLogNumero , 'pType' , 'LOG' , 'pStatus' , 'BYE' ) ;
	
#************************************************************************************************
#  Création des fichiers de suivi depuis le cube Processes_Log et envoi email                         
#************************************************************************************************

If( sLog = 1  % sDebug = 1 );

  ExecuteProcess( 'Process_Log_Export' , 'pProcesses' , cMainProcName , 'pDateExec' , cTimeProcess ) ;

EndIf;
#endregion