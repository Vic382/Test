#region Prolog

#****Begin: Generated Statements***
#****End: Generated Statements****



#***********************************************************************************************************
# CREATEUR : DIMO SOFTWARE - BNS
# DATE DE CREATION : 09/12/2021
# DERNIERE MODIFICATION FFECTUEE PAR : 
# DATE DE DERNIERE MODIFICATION : 
# DESCRIPTION DU PROCESSUS : 
# Mise à jour de la sécurité groupes et utilisateurs 
#***********************************************************************************************************

#------------------------------------------------ MONITORING  ------------------------------------------------#

#***********************************************************************************************************
#                                  Définition des constantes
#***********************************************************************************************************

cMainProcName = GetProcessName();
cRepertoireRacine = GetProcessErrorFileDirectory;
cTimeStamp = TimSt( Now, '\Y\m\d\h\i\s' );
cRandomInt = NumberToString( INT( RAND( ) * 1000 ));
cTimeProcess = cTimeStamp | '_' | cRandomInt;
Z_DEBUT_EXE =  StringToNumber(TimSt (Now, '\h'))*3600 +StringToNumber(TimSt (Now, '\i'))*60+StringToNumber(TimSt (Now, '\s'));

IF ( SUBST ( TM1User() , 1 , 2 ) @= 'R*' ) ;
	cUtilisateur = 'Lanceur' ;
ELSE ;
	cUtilisateur        = TM1User();
ENDIF ;

#**********************************************************************************************************
#                               MAJ SECURITY USER GROUP
#**********************************************************************************************************

#***********************************************************************************************************
#                                  Définition des cubes
#***********************************************************************************************************

sCubeParamP = 'ParametresSources' ;
sCubeParamS = 'ParametresSources' ;
sCubeParamT = 'ParametrageT' ;

#------------------------------------------------ FIN - MONITORING  ------------------------------------------------#

##Définition des variables:

nDebug = 1 ;

sDimGroupe = '}Groups'  ;

##Définition du fichier source

# Récupération du fichier source
sNomFichier = CellGetS ( sCubeParamP , cMainProcName , 'Txt_NomFichier' ) ;
sRepertoireSource = CellGetS ( sCubeParamP , cMainProcName , 'Txt_RepertoireSource' ) ;
sFichierSource = sRepertoireSource | sNomFichier | '.csv' ;

DataSourceNameForServer = sFichierSource ;
DataSourceASCIIDelimiter = ';' ;


#endregion
#region Metadata

#****Begin: Generated Statements***
#****End: Generated Statements****

##** Création des groupes  dans la dimension }Groupe       
DIMENSIONELEMENTINSERT ( sDimGroupe , '' , GROUPE_CODE , 'S' ) ;
#endregion
#region Data

#****Begin: Generated Statements***
#****End: Generated Statements****


#endregion
#region Epilog

#****Begin: Generated Statements***
#****End: Generated Statements****

#------------------------------------------------ MONITORING  ------------------------------------------------#
# Declaration variables et constantes
Z_FIN_EXE = StringToNumber(TimSt (Now, '\h'))*3600 +StringToNumber(TimSt (Now, '\i'))*60+StringToNumber(TimSt (Now, '\s'));
Z_PERIODE = Subst(TODAY(1),1,4) | subst(TODAY(1),6,2);
Z_STATUS = IF(GetProcessErrorFilename@='','OK','KO');
Z_TEMPS_EXECUTION = Z_FIN_EXE - Z_DEBUT_EXE;
Z_LOCAL_TIME =   today(1) | '  -  ' | subst(TIME,1,2) | 'h' | subst(TIME,4,2);
Z_UTILISATEUR = TM1User;

# Nettoyage -> CAMID("pans:u:cty@dimosoftware.com") into 'cty@dimosoftware.com'
nDebut= SCAN( 'pans:u:', Z_UTILISATEUR );
nDebutLong = LONG('pans:u:');
nStart = nDebut + nDebutLong ;
nTotal = LONG(Z_UTILISATEUR) ;
sUser = SUBST(Z_UTILISATEUR, nStart, nTotal - nStart - 1) ;

# Ecriture des informations sur le processus dans le cube ParametresSources                       
CELLPUTS( Z_STATUS , sCubeParamS , cMainProcName , 'Statut' );
CELLPUTN( Z_TEMPS_EXECUTION , sCubeParamS ,  cMainProcName ,'TempsExe');
CELLPUTS( Z_LOCAL_TIME, sCubeParamS , cMainProcName ,'DernExe');
CELLPUTS( sUser, sCubeParamS , cMainProcName ,'txt_Utilisateur' );
#CELLPUTS( Mois, sCubeParamS , cMainProcName ,'DernRef' );
#------------------------------------------------ FIN - MONITORING  -------------------------------------------#
#endregion