#region Prolog

#****Begin: Generated Statements***
#****End: Generated Statements****

#***********************************************************************************************************
# CREATEUR : DIMO SOFTWARE - MSI
# DATE DE CREATION : 24/03/2020
# DERNIERE MODIFICATION EFFECTUEE PAR : RCU
# DATE DE DERNIERE MODIFICATION : 04/08/2020
# DESCRIPTION DU PROCESSUS : 
# Export d'une dimension en fichier plat
#***********************************************************************************************************

#***********************************************************************************************************
#                                  Process basé sur bedrock.Dim.Export v4
#***********************************************************************************************************

#***********************************************************************************************************
#                                  Définition des cubes
#***********************************************************************************************************

sCubeParamP	             = 'ParametresSources' ;
sCubeParamT	             = 'ParametrageT' ;

#***********************************************************************************************************
#                                  Définition des constantes
#***********************************************************************************************************

cMainProcName       = GetProcessName();
cRepertoireRacine   = GetProcessErrorFileDirectory;
cTimeStamp          = TimSt( Now, '\Y\m\d\h\i\s' );
cRandomInt          = NumberToString( INT( RAND( ) * 1000 ));
cTimeProcess        = cTimeStamp | '_' | cRandomInt;

IF ( SUBST ( TM1User() , 1 , 2 ) @= 'R*' ) ;
	cUtilisateur = 'Lanceur' ;
ELSE ;
	cUtilisateur        = TM1User();
ENDIF ;

#***********************************************************************************************************
#                                  Définition des variables
#***********************************************************************************************************

StringGlobalVariable('sProcessReturnCode');
NumericGlobalVariable('nProcessReturnCode');
nProcessReturnCode= 0;

# Pour échanger avec Process.Log.Create
NumericGlobalVariable ('zLogNumero') ; 

sSource = '' ;                                           
sNomFichier =  '' ;
sCheminSourceComplet = sSource |'\'| sNomFichier  ;  
nErrorsExport =0 ;
#***********************************************************************************************************
#                                  Initialisation des variables
#***********************************************************************************************************

zLogNumero        = 1 ;

sExportPath = CellGetS ( sCubeParamT , 'txt_RepertoireExport' , 'ValeurS' ) ;


#***********************************************************************************************************
#                                  Log start time
#***********************************************************************************************************

ExecuteProcess( 'Process_Log_Create', 'pProcesses' , cMainProcName , 'pDateExec' , cTimeProcess , 'pNumero' , zLogNumero , 'pType' , 'LOG' , 'pStatus' , 'START' ,
	'pV2' , 'Export d une dimension' ) ;

#***********************************************************************************************************
#                                  Contrôle des paramètres
#***********************************************************************************************************

ExecuteProcess( 'Process_Log_Create', 'pProcesses' , cMainProcName , 'pDateExec' , cTimeProcess , 'pNumero' , zLogNumero , 'pType' , 'LOG' , 'pStatus' , 'DIM' ,
	'pV1' , pDimension ) ;

ExecuteProcess( 'Process_Log_Create', 'pProcesses' , cMainProcName , 'pDateExec' , cTimeProcess , 'pNumero' , zLogNumero , 'pType' , 'LOG' , 'pStatus' , 'FILE' ,
	'pV1' , sExportPath, 'pV2' , pExportFile ) ;

#***********************************************************************************************************
#                                  Appel du process
#***********************************************************************************************************

nRet = EXECUTEPROCESS('}bedrock.hier.export',
	'pLogOutput', pDebug,
	'pDim', pDimension,
	'pHier', '',
	'pTgtDir', sExportPath,
	'pTgtFile', pExportFile,
	'pTitleRecord', pTitleRecord,
	'pLegacy', 1 ) ;
  
IF ( nRet <> 0 ) ;
                nCountFatal = 1 ;
    	ExecuteProcess( 'Process_Log_Create', 'pProcesses' , cMainProcName , 'pDateExec' , cTimeProcess , 'pNumero' , zLogNumero , 'pType' , 'LOG' , 'pStatus' , 'FATAL' , 'pRef' , nCountFatal ,
   		'pV1' , 'Le process Bedrock a provoqué au moins 1 erreur grave' ) ;
    	
    	ProcessBreak ;
ENDIF;
#endregion
#region Metadata

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Data

#****Begin: Generated Statements***
#****End: Generated Statements****

################################################################################################# 
##~~Join the bedrock TM1 community on GitHub https://github.com/cubewise-code/bedrock Ver 4.0~~##
################################################################################################# 


#endregion
#region Epilog

#****Begin: Generated Statements***
#****End: Generated Statements****

	
#__________________________________________________________________________________________
#
#                                 Log End time 
#__________________________________________________________________________________________

#__________________________________________________________________________________________
#
#                                 Contrôle des erreurs                                            
#__________________________________________________________________________________________

ExecuteProcess( 'Process_Log_Create' , 'pProcesses' , cMainProcName , 'pDateExec' , cTimeProcess , 'pNumero' , zLogNumero , 'pType' , 'LOG' , 'pStatus' , 'END' ) ;

ExecuteProcess( 'Process_Log_Create' , 'pProcesses' , cMainProcName , 'pDateExec' , cTimeProcess , 'pNumero' , zLogNumero , 'pType' , 'LOG' , 'pStatus' , If ( GetProcessErrorFilename @= '' , 'OK' , 'KO' ) ,
   'pV1' , 'Process exécuté en ' , 'pV2' , cUtilisateur ) ;

ExecuteProcess( 'Process_Log_Create' , 'pProcesses' , cMainProcName , 'pDateExec' , cTimeProcess , 'pNumero' , zLogNumero , 'pType' , 'LOG' , 'pStatus' , 'BYE' ) ;
   
#__________________________________________________________________________________________
#
#                                 Création des fichiers de suivi depuis le cube Processes_Log et envoi email                         
#__________________________________________________________________________________________

   
ExecuteProcess( 'Process_Log_Export' , 'pProcesses' , cMainProcName , 'pDateExec' , cTimeProcess ) ;
#endregion