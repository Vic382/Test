#region Prolog


#****Begin: Generated Statements***
#****End: Generated Statements****

#***********************************************************************************************************
#***********************************************************************************************************
# CREATEUR : DIMO SOFTWARE - CTY
# DATE DE CREATION : 07/07/2023
# DERNIERE MODIFICATION EFFECTUEE PAR : 
# DATE DE DERNIERE MODIFICATION : 
# DESCRIPTION DU PROCESSUS : Ce processus vous permet de supprimer un élément 
# ou tous les éléments d'une dimension ou bien l'ensemble des éléments de toutes les dimension
# 
#***********************************************************************************************************

#***********************************************************************************************************
#                                  Définition des cubes
#***********************************************************************************************************

sCubeParamP	             = 'ParametresSources' ;
sCubeParamT	             = 'ParametrageT' ;

#***********************************************************************************************************
#                                  Définition des dimensions
#***********************************************************************************************************
sDimCube = '}Cubes' ;
sDimTech = '}Dimensions' ;

#***********************************************************************************************************
#                                  Définition des constantes
#***********************************************************************************************************

cMainProcName       = GetProcessName();
cRepertoireRacine   = GetProcessErrorFileDirectory;
cTimeStamp          = TimSt( Now, '\Y\m\d\h\i\s' );
cRandomInt          = NumberToString( INT( RAND( ) * 1000 ));
cTimeProcess        = cTimeStamp | '_' | cRandomInt;
Z_DEBUT_EXE =  StringToNumber(TimSt (Now, '\h'))*3600 +StringToNumber(TimSt (Now, '\i'))*60+StringToNumber(TimSt (Now, '\s'));


IF ( SUBST ( TM1User() , 1 , 2 ) @= 'R*' ) ;
	cUtilisateur = 'Lanceur' ;
ELSE ;
	cUtilisateur        = TM1User();
ENDIF ;

#***********************************************************************************************************
#                                  Définition des variables
#***********************************************************************************************************

#**Fichier Debug
sFichierRepDebug = '..\DEBUG\' ;
sDebug = sFichierRepDebug | 'BugCleanDim.txt' ;


#***********************************************************************************************************
#                                  Initialisation des variables
#***********************************************************************************************************
nErrorsExport  = 0 ;
sDim = pDim ;
sElement = pElement ;
 

#***********************************************************************************************************
#                                  Test sur l'existance de la dimension et de l'élément
#***********************************************************************************************************

IF ( DIMIX ( sDimTech , sDim ) = 0 ) ;
  nErrors = 1 ;
  ProcessBreak ;
ENDIF ;

IF ( sElement @<> '' & sElement @<> '*' & sDim @<> '*' ) ;

  IF ( DIMIX ( sDim , sElement ) = 0 ) ;
    nErrors = 1 ;
    ProcessBreak ;
  ENDIF ;
  ## Commentaires : 
  # Suppression d'un élément dans une dimension 
  # Fin Commentaires
  DimensionElementDelete( sDim , sElement );
  
ENDIF ;

# Commentaires: 
# Si on souhaite supprimer tous les elements de toutes les dimensions
# Fin Commentaires

IF ( sDim @='*' ) ;
  # Boucle sur la dimension "}Dimensions"
  nTailleBoucle = DimSiz ( '}Dimensions' ) ;

  While ( nTailleBoucle >= 0 ) ;

    sDim = DimNm ( '}Dimensions' , nTailleBoucle ) ; 
    sPremierCar = SubSt ( sDim , 1 ,1 ) ; 

    If ( sPremierCar @<> '}' ) ;

      sDeuxPremiersCar = SubSt ( sDim , 1 , 2 ) ;

      If ( sDeuxPremiersCar @<> 'm_' ) ; 

        DimensionDeleteAllElements ( sDim ) ; 

      EndIf ; 

    EndIf ; 

    nTailleBoucle = nTailleBoucle - 1 ; 
  End ;
ENDIF ;

# Commentaire : 
# Si on souhaite supprimer tous les elements d'une dimension
# Fin Commentaires :
IF ( sElement @= '*' & sDim @<> '*' ) ;

  DimensionDeleteAllElements(sDim);

ENDIF ;
#endregion
#region Metadata

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Data

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Epilog

#****Begin: Generated Statements***
#****End: Generated Statements****

#------------------------------------------------ MONITORING  ------------------------------------------------#

# Declaration variables et constantes

Z_FIN_EXE =  StringToNumber(TimSt (Now, '\h'))*3600 +StringToNumber(TimSt (Now, '\i'))*60+StringToNumber(TimSt (Now, '\s'));
Z_PERIODE=subst(TODAY(1),1,4) | subst(TODAY(1),6,2);

Z_STATUS=IF(GetProcessErrorFilename@='','OK','KO');
Z_TEMPS_EXECUTION= Z_FIN_EXE - Z_DEBUT_EXE;
Z_LOCAL_TIME=   today(1) | '  -  ' | subst(TIME,1,2) | 'h' | subst(TIME,4,2);
Z_UTILISATEUR = TM1User;

# Ecriture des informations sur le processus dans le cube ParametresSources                       

CELLPUTS( Z_STATUS , sCubeParamP , cMainProcName , 'Statut' );
CELLPUTN( Z_TEMPS_EXECUTION , sCubeParamP ,  cMainProcName ,'TempsExe');
CELLPUTS( Z_LOCAL_TIME, sCubeParamP , cMainProcName ,'DernExe');
CELLPUTS( Z_UTILISATEUR, sCubeParamP , cMainProcName ,'txt_Utilisateur' );

#------------------------------------------------ FIN - MONITORING  ------------------------------------------------#
#endregion