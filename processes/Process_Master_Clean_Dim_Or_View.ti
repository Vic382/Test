#region Prolog

#****Begin: Generated Statements***
#****End: Generated Statements****

#*****************************************************************************
# CREATEUR : DIMO SOFTWARE: CTY
# DATE DE CREATION : 07/07/2023
# DERNIERE MODIFICATION EFFECTUEE PAR : ...
# DATE DE DERNIERE MODIFICATION : ../../201.
# DESCRIPTION DU PROCESSUS: Ce master vous permet de lancer les processus pour vider un cube, remettre une vue à zéro
# ou supprimer des éléments d'une dimension.

#*****************************************************************************

#***********************************************************************************************************
#                                  Définition des cubes
#***********************************************************************************************************

sCubeParamP	             = 'ParametresSources' ;
sCubeParamT	             = 'ParametrageT' ;

#***********************************************************************************************************
#                                  Définition des constantes
#***********************************************************************************************************

cMainProcName       = GetProcessName();
cRepertoireRacine   = GetProcessErrorFileDirectory;
cTimeStamp          = TimSt( Now, '\Y\m\d\h\i\s' );
cRandomInt          = NumberToString( INT( RAND( ) * 1000 ));
cTimeProcess        = cTimeStamp | '_' | cRandomInt;
Z_DEBUT_EXE =  StringToNumber(TimSt (Now, '\h'))*3600 +StringToNumber(TimSt (Now, '\i'))*60+StringToNumber(TimSt (Now, '\s'));

IF ( SUBST ( TM1User() , 1 , 2 ) @= 'R*' ) ;
	cUtilisateur = 'Lanceur' ;
ELSE ;
	cUtilisateur        = TM1User();
ENDIF ;

#***********************************************************************************************************
#                                  Définition des variables
#***********************************************************************************************************

sRepertoire = CellGetS ( sCubeParamT , 'txt_RepertoireInstance' , 'ValeurS' ) ;

#***********************************************************************************************************
#                                  Initialisation des variables
#***********************************************************************************************************
nErrors = 0 ;


#***********************************************************************************************************
#                                 Lancement des processus
#***********************************************************************************************************

## Clean cube

IF ( pCleanCube @<> ''  ) ;

  ExecuteProcess ( 'Process_Clean_Cube' , 'pCube' , pCube ) ;

  IF ( pCube @= '' ) ;

    nErrors = 1  ;
    ProcessBreak;

  ENDIF ;

ENDIF;

IF ( pCleanDim @<> '' ) ;

  ExecuteProcess ( 'Process_Clean_Dim' , 'pDim' , pDim , 'pElement' , pElement ) ;

  IF ( pDim @= '' % pElement @= '' ) ;

    nErrors = 1  ;
    ProcessBreak;

  ENDIF ;

ENDIF ;


IF ( pCleanView @<> '' ) ;

  ExecuteProcess ( 'Process_Clean_View' , 'pCube' , pCubeView , 'pView' , pView ) ;

  IF ( pCubeView @= '' % pView @= '' ) ;

    nErrors = 1  ;
    ProcessBreak;

  ENDIF ;

ENDIF ;
#endregion
#region Metadata

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Data

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Epilog

#****Begin: Generated Statements***
#****End: Generated Statements****

#------------------------------------------------ MONITORING  ------------------------------------------------#

# Declaration variables et constantes

Z_FIN_EXE =  StringToNumber(TimSt (Now, '\h'))*3600 +StringToNumber(TimSt (Now, '\i'))*60+StringToNumber(TimSt (Now, '\s'));
Z_PERIODE=subst(TODAY(1),1,4) | subst(TODAY(1),6,2);

Z_STATUS=IF(GetProcessErrorFilename@='','OK','KO');
Z_TEMPS_EXECUTION= Z_FIN_EXE - Z_DEBUT_EXE;
Z_LOCAL_TIME=   today(1) | '  -  ' | subst(TIME,1,2) | 'h' | subst(TIME,4,2);
Z_UTILISATEUR = TM1User;

# Ecriture des informations sur le processus dans le cube ParametresSources                       

CELLPUTS( Z_STATUS , sCubeParamP , cMainProcName , 'Statut' );
CELLPUTN( Z_TEMPS_EXECUTION , sCubeParamP ,  cMainProcName ,'TempsExe');
CELLPUTS( Z_LOCAL_TIME, sCubeParamP , cMainProcName ,'DernExe');
CELLPUTS( Z_UTILISATEUR, sCubeParamP , cMainProcName ,'txt_Utilisateur' );

#------------------------------------------------ FIN - MONITORING  ------------------------------------------------#
#endregion