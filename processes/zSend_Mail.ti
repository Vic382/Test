#region Prolog

#****Begin: Generated Statements***
#****End: Generated Statements****

#***********************************************************************************************
# CREATEUR : CTY
# DATE DE CREATION : 05/07/2023
# DERNIERE MODIFICATION EFFECTUEE PAR :
# DATE DE DERNIERE MODIFICATION : 
# DESCRIPTION DU PROCESSUS: Envoi de mail avec ou sans pièce jointe
#************************************************************************************************

#***********************************************************************************************************
#                                  Définition des cubes
#***********************************************************************************************************
sCubeParamT	             = 'ParametrageT' ;
sCubeParamP              = 'ParametresSources' ;
#***********************************************************************************************************
#                                  Définition des constantes
#***********************************************************************************************************

cMainProcName       = GetProcessName();
cRepertoireRacine   = GetProcessErrorFileDirectory;
cTimeStamp          = TimSt( Now, '\Y\m\d\h\i\s' );
cRandomInt          = NumberToString( INT( RAND( ) * 1000 ));
cTimeProcess        = cTimeStamp | '_' | cRandomInt;
Z_DEBUT_EXE =  StringToNumber(TimSt (Now, '\h'))*3600 +StringToNumber(TimSt (Now, '\i'))*60+StringToNumber(TimSt (Now, '\s'));

IF ( SUBST ( TM1User() , 1 , 2 ) @= 'R*' ) ;
	cUtilisateur = 'Lanceur' ;
ELSE ;
	cUtilisateur        = TM1User();
ENDIF ;

#***********************************************************************************************************
#                                  Définition des variables
#***********************************************************************************************************

sRepertoireExe = CellGetS ( sCubeParamT , 'txt_RepertoireExe' , 'ValeurS' ) ;

#***********************************************************************************************************
#                                  Initialisation des variables
#***********************************************************************************************************

##### Variable servant a passer des quotes( ' )via un character ASCII
µ = CHAR(39);

##### Initialisation des variables #####
sFrom = '';
sTo = '';
sCc = '';
sSub = '';
sBody = '';
sSmtpServer = '';
sAttachments = '';
sSmtpUsername = '';
sSmtpPassword = '';
sPortNumber = ''; 

#####  DEBUT - PARAMETRE DE LA COMMANDE #####
##### /!\ ATTENTION /!\ respecter le format µ| 'Ma String'/Mon Parametre |µ  /!\ ATTENTION /!\ #####
##### /!\ ATTENTION /!\ au port : ici c'est par défault le 587, confirmé par ticket IBM

sFrom  = µ| pFrom |µ;
sTo = µ| pTo |µ;
sCc = µ| pCc |µ;
sSub = µ| pSub |µ;
sBody = µ| pBody |µ;
sSmtpServer = µ| pSmtpServer |µ;
sAttachments = µ| pAttachments |µ;
#sSmtpUsername = µ| sSmtpUsername |µ;
#sSmtpPassword = µ| sSmtpPassword |µ;
sPortNumber =µ| pPortNumber |µ;

#####  FIN - PARAMETRE DE LA COMMANDE #####

vCmd = 'powershell.exe -Command "& ..\SendMail.ps1  -SmtpServer '|sSmtpServer |' -Port '|sPortNumber |' -From '|sFrom|' -To '|sTo|' -Subject '|sSub|' -BodyAsHtml '|sBody|' " ';  

ExecuteCommand ( vCmd , 0 );

#ASCIIOUTPUT ( '..\DEBUG\testmail1.txt' , sSmtpServer , sPortNumber , sFrom ,  sTo , sSub , sBody ) ;
#ASCIIOUTPUT ( '..\DEBUG\testmail2.txt' , vCmd ) ;
#endregion
#region Metadata

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Data

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Epilog

#****Begin: Generated Statements***
#****End: Generated Statements****

#------------------------------------------------ MONITORING  ------------------------------------------------#

# Declaration variables et constantes

Z_FIN_EXE =  StringToNumber(TimSt (Now, '\h'))*3600 +StringToNumber(TimSt (Now, '\i'))*60+StringToNumber(TimSt (Now, '\s'));
Z_PERIODE=subst(TODAY(1),1,4) | subst(TODAY(1),6,2);

Z_STATUS=IF(GetProcessErrorFilename@='','OK','KO');
Z_TEMPS_EXECUTION= Z_FIN_EXE - Z_DEBUT_EXE;
Z_LOCAL_TIME=   today(1) | '  -  ' | subst(TIME,1,2) | 'h' | subst(TIME,4,2);
Z_UTILISATEUR = TM1User;

# Ecriture des informations sur le processus dans le cube ParametresSources                       

CELLPUTS( Z_STATUS , sCubeParamP , cMainProcName , 'Statut' );
CELLPUTN( Z_TEMPS_EXECUTION , sCubeParamP ,  cMainProcName ,'TempsExe');
CELLPUTS( Z_LOCAL_TIME, sCubeParamP , cMainProcName ,'DernExe');
CELLPUTS( Z_UTILISATEUR, sCubeParamP , cMainProcName ,'txt_Utilisateur' );

#------------------------------------------------ FIN - MONITORING  ------------------------------------------------#

#endregion